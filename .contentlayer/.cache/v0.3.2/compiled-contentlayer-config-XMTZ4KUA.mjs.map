{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import fs from \"fs\"\r\nimport path from \"path\"\r\nimport { defineDocumentType, makeSource } from \"contentlayer/source-files\"\r\nimport rehypePrettyCode from \"rehype-pretty-code\"\r\nimport rehypeSlug from \"rehype-slug\"\r\nimport { codeImport } from \"remark-code-import\"\r\nimport remarkGfm from \"remark-gfm\"\r\nimport { getHighlighter, loadTheme } from \"shiki\"\r\n\r\n/** @type {import('contentlayer/source-files').ComputedFields} */\r\nconst computedFields = {\r\n  slug: {\r\n    type: \"string\",\r\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n  },\r\n  slugAsParams: {\r\n    type: \"string\",\r\n    resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\r\n  },\r\n}\r\n\r\nexport const Doc = defineDocumentType(() => ({\r\n  name: \"Doc\",\r\n  filePathPattern: `docs/**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields: {\r\n    title: {\r\n      type: \"string\",\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: \"string\",\r\n      required: true,\r\n    },\r\n  },\r\n  computedFields,\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"./src/content\",\r\n  documentTypes: [Doc],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm, codeImport],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      [\r\n        rehypePrettyCode,\r\n        {\r\n          theme: {\r\n            dark: JSON.parse(\r\n              fs.readFileSync(path.resolve(\"./lib/themes/dark.json\"), \"utf-8\")\r\n            ),\r\n            light: JSON.parse(\r\n              fs.readFileSync(path.resolve(\"./lib/themes/light.json\"), \"utf-8\")\r\n            ),\r\n          },\r\n          getHighlighter: async () => {\r\n            const theme = await loadTheme(\r\n              path.join(process.cwd(), \"lib/vscode-theme.json\")\r\n            )\r\n            return await getHighlighter({ theme })\r\n          },\r\n          /**\r\n           * @param {{ children: string | any[]; }} node\r\n           */\r\n          onVisitLine(node) {\r\n            // Prevent lines from collapsing in `display: grid` mode, and allow empty\r\n            // lines to be copy/pasted\r\n            if (node.children.length === 0) {\r\n              node.children = [{ type: \"text\", value: \" \" }]\r\n            }\r\n          },\r\n          /**\r\n           * @param {{ properties: { className: string[]; }; }} node\r\n           */\r\n          onVisitHighlightedLine(node) {\r\n            node.properties.className.push(\"line--highlighted\")\r\n          },\r\n          /**\r\n           * @param {{ properties: { className: string[]; }; }} node\r\n           */\r\n          onVisitHighlightedWord(node) {\r\n            node.properties.className = [\"word--highlighted\"]\r\n          },\r\n        },\r\n      ],\r\n    ],\r\n  },\r\n})\r\n"],
  "mappings": ";AAAA,OAAO,QAAQ;AACf,OAAO,UAAU;AACjB,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,SAAS,kBAAkB;AAC3B,OAAO,eAAe;AACtB,SAAS,gBAAgB,iBAAiB;AAG1C,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK;AAAA,EACjC;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AACF;AAEO,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,GAAG;AAAA,EACnB,KAAK;AAAA,IACH,eAAe,CAAC,WAAW,UAAU;AAAA,IACrC,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL,MAAM,KAAK;AAAA,cACT,GAAG,aAAa,KAAK,QAAQ,wBAAwB,GAAG,OAAO;AAAA,YACjE;AAAA,YACA,OAAO,KAAK;AAAA,cACV,GAAG,aAAa,KAAK,QAAQ,yBAAyB,GAAG,OAAO;AAAA,YAClE;AAAA,UACF;AAAA,UACA,gBAAgB,YAAY;AAC1B,kBAAM,QAAQ,MAAM;AAAA,cAClB,KAAK,KAAK,QAAQ,IAAI,GAAG,uBAAuB;AAAA,YAClD;AACA,mBAAO,MAAM,eAAe,EAAE,MAAM,CAAC;AAAA,UACvC;AAAA;AAAA;AAAA;AAAA,UAIA,YAAY,MAAM;AAGhB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA;AAAA;AAAA;AAAA,UAIA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACpD;AAAA;AAAA;AAAA;AAAA,UAIA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
